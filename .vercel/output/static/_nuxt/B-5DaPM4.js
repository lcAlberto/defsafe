import{r as o,G as c,E as i}from"./DZUntpnH.js";import{u as a}from"./CpAunxkk.js";const n={getCats:t=>t.cats,getErrors:t=>t.errors,getLoading:t=>s=>t.loading[s]},h=()=>({cats:o([]),errors:o([]),loading:{fetchingCats:!1,creatingCat:!1,editingCat:!1,deletingCat:!1}}),f={async fetchCats(){const t=c();await $fetch(`${t.public.baseUrl}/cats/cats-with-status`,{method:"GET"}).then(s=>{this.cats=s.cats,a("success","Cats",`${s.message} || Success!`)}).catch(s=>{this.error=s,a("error","Cats","Error on fetch cats")})},async createCat(t){const s=c();await $fetch(`${s.public.baseUrl}/cats/`,{method:"POST",body:t}).then(e=>{a("success","Cats",`${e.message} || Success!`),this.fetchCats()}).catch(e=>{this.error=e,a("error","Cats","Error on create")})},async editCat(t,s){const e=c();await $fetch(`${e.public.baseUrl}/cats/${s}`,{method:"PUT",body:t}).then(r=>{a("success","Cats",`${r.message} || Success!`),this.fetchCats()}).catch(r=>{this.error=r,a("error","Cats","Error on update")})},async deleteCat(t){const s=c();await $fetch(`${s.public.baseUrl}/cats/${t}`,{method:"DELETE"}).then(e=>{a("success","Cats",`${e.message} || Success!`),this.fetchCats()}).catch(e=>{this.error=e,a("error","Cats","Error on delete")})}},g=i("catStore",{getters:n,state:h,actions:f});export{g as u};
